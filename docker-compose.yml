version: '3.8'

services:
  loki:
    image: grafana/loki:3.0.0
    container_name: obsidian-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - loki_data:/loki
      - ./loki-config.yaml:/etc/loki/loki-config.yaml:ro
    networks:
      - obsidian-monitoring

  alloy:
    image: grafana/alloy:latest
    container_name: obsidian-alloy
    ports:
      - "12345:12345"  # Alloy UI
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy:ro
      - ./logs:/logs:ro  # Read access to the logs directory
    command: run /etc/alloy/config.alloy --server.http.listen-addr=0.0.0.0:12345
    depends_on:
      - loki
    networks:
      - obsidian-monitoring

  metrics-exporter:
    build: .
    container_name: obsidian-metrics-exporter
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs:ro
      - ./parse_notes.py:/app/parse_notes.py:ro
      - ./config.yaml:/app/config.yaml:ro
      - "/Users/nic/NVDH Dropbox/Nicole van der Hoeven/DownloadMyBrain/dmb-obsidian:/app/vault:ro"
    command: python3 /app/parse_notes.py --start-metrics-server --vault-path /app/vault
    networks:
      - obsidian-monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: obsidian-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - obsidian-monitoring

  grafana:
    image: grafana/grafana:11.6.0
    container_name: obsidian-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
    networks:
      - obsidian-monitoring

volumes:
  loki_data:
  grafana_data:

networks:
  obsidian-monitoring:
    driver: bridge
